	In first, I created a QApplication object to start my application. Then to keep everything that I will include for the game, I created a widget.
 
	Then, to add a timer label in the widget I created a Timer class, in that class there is QTimer and a label that show how much time have passed. To update that label I used QTimer objects Timeout signal and then insert that label in that widget to show time. I add set_zero slot in timer to make timer label 0 and then use it when new game started. When the time passed exceeds 180 second, it stopes the QTimer and pops a meesage box that says "You Lost." Then in Timer class I added a custom signal that indicates that QTimer has stopped, because I needed that signal in the future. 

	Then I created Card class for card buttons in game. Since these cards should be clickable, I make them subclasss of QPushButton objects. In the Card objects I hold 2 fields, Qstring text and word. “Word” field keeps actual word of a card, and the “text” field keeps the track of appearing word on a card. Because by looking at them, in the flip metod, I flipped cards in the right way. And there is another metod called disable, and by that metod cards become disable and their appearing word on them becomes blank. 

	When I finished with cards, I created a Grid class tho host all my cards and execute appropriate commands. First too keep track of time, I passed the Timer object I created in the constructor of Grid. Then I passed to constructor an array which holds the names for cards. And there is two additional fields; int “sc” and QLabel “score”. Score show the score by using current value in sc and with every pairing, I incremented sc. Then I added several slots and one custom signal. The signal named two_cards_opened() and indicates there are two opened cards out there. The slot “action()” simply executes actions when to cards opened. When two cards are opened it first checks if they are equal, and if so, it increments “sc” and updates “score” label and disables these two cards and set their text to blank. If those two cards are not equal, it flips them back. When doing these things it also checks if all cards are matched and if so, it diables all cards and stops the QTimer in the timer field and pops a message box that says "You Won". Then there is “stop()” slot and it simply disables all the cards and nothing more. Then there is “new_game()” method, and it resets the score, resets the timer, starts timer again and shuffles every name in the array we had in constructor, and by new indexes it changes every name on the cards and since they could be disables before the new game our method makes them enable again. There is two other slots named “block_cards()” and “deblock_cards()” and they blocks or deblock signals come from cards. When two cards are opened I block clicked signal to be sure other cards can not be opened and when I done with open cards I removed the block. Then there is “check()” slot which checks how many opened cards with each click on any card and if there is 2, it emits “two_card_opened()” signal. 

	From that point I get back to the main function two add everything on the widget and connect appropriate signals and slots. I created Timer object and passed it Grid object with the array of names. And when Timer object emits “time_stopped()” signal I used Grid ”stop()” slot by connecting them. Then with a nested for loop I added 30 cards in Grid object. And with each click signal on cards I connect flip slot. And also with each click signal on any card I connect check() slot on Grid object.  If there are 2 open cards the check() slot emits two_cards_opened() signal, so I connect two_card_opened() signal with indepented QTimer objects start() slot and I connected that QTimer timeout() signal with Grid action() slot and by that I made sure there will be delay before I flip back or disable cards with each pairing attempt. And also connected two_cards_opened() signal with Grid block_cards() slot and connected QTimer timeout() signal with Grid deblock_cards() slot to prevent additional clicks on that time interval. Then I created “Quit” button and connected it so when it clicked, it quits the program. Then I added “New Game” button and connect its clicked() signal to Grid new_game() slot and Timer set_zero() slot. Then I created a HboxLayout and I added “time” and  “score” labels, and “Quit” and “New Game” buttons in horizontal manner. Then I added that  HboxLayout and Grid in widget in vertial manner by VboxLayout. And finally I set my games title as “Card Match Game” and then I finished the code.
